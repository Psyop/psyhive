#!/usr/bin/env python

"""Build shot work file from a template scene."""

# Add psyhive to sys.path
import os
import sys
_PSYHIVE_DIR = '{}/code/primary/addons/maya/modules/psyhive/scripts'.format(
    os.environ['PSYOP_PROJECT_PATH'])
sys.path.append(_PSYHIVE_DIR)

import optparse

from psyhive import tk
from psyhive.tools import shot_builder

_EXAMPLE_TMPL = ('P:/projects/clashshortfilm_33294P/sequences/rnD/rnd0050/'
                 'lighting/work/maya/scenes/rnd0050_lighting_v004.ma')
_USAGE = '''

Tool for building a shot scene file from a template.

In maya all asset paths are updated to the latest, and all abc paths are
updated to the latest publish in the current shot. Maya scene need to be
generated in an instance of maya and so will be generated on the farm.

In nuke the output is generated immediately. All Read nodes will have their
file paths updated to the current shot if there is a render in that shot,
otherwise the Read node will be disabled. The frame ranges will be updated
to match the current shot's frame range in shotgun. Write nodes will also
be updated to match the new work file.

Example:

> cd P:/projects/clashshortfilm_33294P/sequences/rnD/rnd0080
> shot_builder {}

This will build a maya scene for rnd0080 from the template in rnd0050.
'''.format(_EXAMPLE_TMPL)


def _get_opts():
    """Read command line options.

    Returns:
        (tuple): options/args
    """
    _parser = optparse.OptionParser(_USAGE)
    _parser.add_option(
        "--diff", dest="diff", action="store_true",
        help="Show diffs (nk only)")
    return _parser.parse_args()


def _main():
    """Execute shot builder."""
    _opts, _args = _get_opts()

    # Get template
    if not _args:
        raise RuntimeError('No template path')
    _tmpl_path = _args[0]
    print 'TEMPLATE', _tmpl_path
    if not os.path.exists(_tmpl_path):
        raise RuntimeError('Missing template path '+_tmpl_path)
    _tmpl_work = tk.get_work(_tmpl_path)
    if not _tmpl_work:
        raise RuntimeError('Template is not work file '+_tmpl_path)

    # Get shot
    _shot = tk.get_shot(os.getcwd())
    if not _shot:
        raise RuntimeError('Current dir is not a shot - '+os.getcwd())
    print 'SHOT', _shot.path
    if _shot == _tmpl_work.shot:
        raise RuntimeError('Template is in same shot as current dir')

    # Build farm job
    if _tmpl_work.extn in ['ma', 'mb']:
        shot_builder.submit_update_ma(template=_tmpl_work, shot=_shot)
    elif _tmpl_work.extn in ['nk']:
        shot_builder.update_nk(template=_tmpl_work, shot=_shot)
    else:
        raise ValueError(_tmpl_work.extn)


if __name__ == '__main__':
    _main()
